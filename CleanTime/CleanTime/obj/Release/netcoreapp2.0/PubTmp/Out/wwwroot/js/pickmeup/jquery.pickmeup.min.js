/**
 * @package   PickMeUp - jQuery datepicker plugin
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @author    Stefan Petre <www.eyecon.ro>
 * @copyright Copyright (c) 2013-2016, Nazar Mokrynskyi
 * @copyright Copyright (c) 2008-2009, Stefan Petre
 * @license   MIT License, see license.txt
 */
!function (e) { function t() { for (var e = new Date(this.toString()), t = 28, a = e.getMonth(); e.getMonth() == a;)++t, e.setDate(t); return t - 1 } e.addDays = function (e) { this.setDate(this.getDate() + e) }, e.addMonths = function (e) { var a = this.getDate(); this.setDate(1), this.setMonth(this.getMonth() + e), this.setDate(Math.min(a, t.apply(this))) }, e.addYears = function (e) { var a = this.getDate(); this.setDate(1), this.setFullYear(this.getFullYear() + e), this.setDate(Math.min(a, t.apply(this))) }, e.getDayOfYear = function () { var e = new Date(this.getFullYear(), this.getMonth(), this.getDate(), 0, 0, 0), t = new Date(this.getFullYear(), 0, 0, 0, 0, 0), a = e - t; return Math.floor(a / 24 * 60 * 60 * 1e3) } }(Date.prototype), function (e) { "function" == typeof define && define.amd ? define(["jquery"], e) : e("object" == typeof exports ? require("jquery") : jQuery) }(function (e) { function t(e, t) { e = e.split(" "); for (var a = 0; a < e.length; ++a)e[a] += t; return e.join(" ") } function a() { var t, a, s, i, r, d, o, l = e(this).data("pickmeup-options"), u = this.pickmeup, c = Math.floor(l.calendars / 2), m = l.date, p = l.current, h = l.min ? new Date(l.min) : null, f = l.max ? new Date(l.max) : null, v = (new Date).setHours(0, 0, 0, 0).valueOf(); h && (h.setDate(1), h.addMonths(1), h.addDays(-1)), f && (f.setDate(1), f.addMonths(1), f.addDays(-1)), u.find(".pmu-instance > :not(nav)").remove(); for (var y = 0; y < l.calendars; y++)if (t = new Date(p), i = u.find(".pmu-instance").eq(y), u.hasClass("pmu-view-years") ? (t.addYears(12 * (y - c)), a = t.getFullYear() - 6 + " - " + (t.getFullYear() + 5)) : u.hasClass("pmu-view-months") ? (t.addYears(y - c), a = t.getFullYear()) : u.hasClass("pmu-view-days") && (t.addMonths(y - c), a = n(t, l.title_format, l.locale)), !d && f && (o = new Date(t), l.select_day ? o.addMonths(l.calendars - 1) : l.select_month ? o.addYears(l.calendars - 1) : o.addYears(12 * (l.calendars - 1)), o > f))--y, p.addMonths(-1), d = void 0; else if (d = new Date(t), !r && (r = new Date(t), r.setDate(1), r.addMonths(1), r.addDays(-1), h && h > r))--y, p.addMonths(1), r = void 0; else { i.find(".pmu-month").text(a), s = ""; var g = function (e) { return "range" == l.mode && e >= new Date(m[0]).getFullYear() && e <= new Date(m[1]).getFullYear() || "multiple" == l.mode && -1 !== m.reduce(function (e, t) { return e.push(new Date(t).getFullYear()), e }, []).indexOf(e) || new Date(m).getFullYear() == e }, w = function (e, t) { var a = new Date(m[0]).getFullYear(), s = new Date(m[1]).getFullYear(), n = new Date(m[0]).getMonth(), i = new Date(m[1]).getMonth(); return "range" == l.mode && e > a && s > e || "range" == l.mode && e == a && s > e && t >= n || "range" == l.mode && e > a && e == s && i >= t || "range" == l.mode && e == a && e == s && t >= n && i >= t || "multiple" == l.mode && -1 !== m.reduce(function (e, t) { return t = new Date(t), e.push(t.getFullYear() + "-" + t.getMonth()), e }, []).indexOf(e + "-" + t) || new Date(m).getFullYear() == e && new Date(m).getMonth() == t }; !function () { for (var e, a = [], n = t.getFullYear() - 6, i = new Date(l.min).getFullYear(), r = new Date(l.max).getFullYear(), d = 0; 12 > d; ++d)e = { text: n + d, class_name: [] }, l.min && e.text < i || l.max && e.text > r ? e.class_name.push("pmu-disabled") : g(e.text) && e.class_name.push("pmu-selected"), e.class_name = e.class_name.join(" "), a.push(e); s += b.body(a, "pmu-years") }(), function () { for (var e, a = [], n = t.getFullYear(), i = new Date(l.min).getFullYear(), r = new Date(l.min).getMonth(), d = new Date(l.max).getFullYear(), o = new Date(l.max).getMonth(), u = 0; 12 > u; ++u)e = { text: l.locale.monthsShort[u], class_name: [] }, l.min && (i > n || r > u && n == i) || l.max && (n > d || u > o && n >= d) ? e.class_name.push("pmu-disabled") : w(n, u) && e.class_name.push("pmu-selected"), e.class_name = e.class_name.join(" "), a.push(e); s += b.body(a, "pmu-months") }(), function () { var a, n = [], i = t.getMonth(); !function () { t.setDate(1); var e = (t.getDay() - l.first_day) % 7; t.addDays(-(e + (0 > e ? 7 : 0))) }(); for (var r = 0; 42 > r; ++r) { a = { text: t.getDate(), class_name: [] }, i != t.getMonth() && a.class_name.push("pmu-not-in-month"), 0 == t.getDay() ? a.class_name.push("pmu-sunday") : 6 == t.getDay() && a.class_name.push("pmu-saturday"); var d = l.render(new Date(t)) || {}, o = t.valueOf(), u = l.min && l.min > t || l.max && l.max < t; d.disabled || u ? a.class_name.push("pmu-disabled") : (d.selected || l.date == o || -1 !== e.inArray(o, l.date) || "range" == l.mode && o >= l.date[0] && o <= l.date[1]) && a.class_name.push("pmu-selected"), o == v && a.class_name.push("pmu-today"), d.class_name && a.class_name.push(d.class_name), a.class_name = a.class_name.join(" "), n.push(a), t.addDays(1) } s += b.body(n, "pmu-days") }(), i.append(s) } r.setDate(1), d.setDate(1), d.addMonths(1), d.addDays(-1), u.find(".pmu-prev").css("visibility", l.min && l.min >= r ? "hidden" : "visible"), u.find(".pmu-next").css("visibility", l.max && l.max <= d ? "hidden" : "visible"), l.fill.apply(this) } function s(t, a, n, i) { if (t.constructor == Date) return t; if (!t) return new Date; var r = t.split(n); if (r.length > 1) return r.forEach(function (t, r, d) { d[r] = s(e.trim(t), a, n, i) }), r; var d = i.monthsShort.join(")(") + ")(" + i.months.join(")("); n = new RegExp("[^0-9a-zA-Z(" + d + ")]+"); for (var o, l, u, c, m, p = t.split(n), h = a.split(n), f = new Date, v = 0; v < p.length; v++)switch (h[v]) { case "b": l = i.monthsShort.indexOf(p[v]); break; case "B": l = i.months.indexOf(p[v]); break; case "d": case "e": o = parseInt(p[v], 10); break; case "m": l = parseInt(p[v], 10) - 1; break; case "Y": case "y": u = parseInt(p[v], 10), u += u > 100 ? 0 : 29 > u ? 2e3 : 1900; break; case "H": case "I": case "k": case "l": c = parseInt(p[v], 10); break; case "P": case "p": /pm/i.test(p[v]) && 12 > c ? c += 12 : /am/i.test(p[v]) && c >= 12 && (c -= 12); break; case "M": m = parseInt(p[v], 10) }var y = new Date(void 0 === u ? f.getFullYear() : u, void 0 === l ? f.getMonth() : l, void 0 === o ? f.getDate() : o, void 0 === c ? f.getHours() : c, void 0 === m ? f.getMinutes() : m, 0); return isNaN(1 * y) && (y = new Date), y } function n(e, t, a) { var s = e.getMonth(), n = e.getDate(), i = e.getFullYear(), r = e.getDay(), d = e.getHours(), o = d >= 12, l = o ? d - 12 : d, u = e.getDayOfYear(); 0 == l && (l = 12); for (var c, m = e.getMinutes(), p = e.getSeconds(), h = t.split(""), f = 0; f < h.length; f++) { switch (c = h[f]) { case "a": c = a.daysShort[r]; break; case "A": c = a.days[r]; break; case "b": c = a.monthsShort[s]; break; case "B": c = a.months[s]; break; case "C": c = 1 + Math.floor(i / 100); break; case "d": c = 10 > n ? "0" + n : n; break; case "e": c = n; break; case "H": c = 10 > d ? "0" + d : d; break; case "I": c = 10 > l ? "0" + l : l; break; case "j": c = 100 > u ? 10 > u ? "00" + u : "0" + u : u; break; case "k": c = d; break; case "l": c = l; break; case "m": c = 9 > s ? "0" + (1 + s) : 1 + s; break; case "M": c = 10 > m ? "0" + m : m; break; case "p": case "P": c = o ? "PM" : "AM"; break; case "s": c = Math.floor(e.getTime() / 1e3); break; case "S": c = 10 > p ? "0" + p : p; break; case "u": c = r + 1; break; case "w": c = r; break; case "y": c = ("" + i).substr(2, 2); break; case "Y": c = i }h[f] = c } return h.join("") } function i() { var t, a = e(this), s = a.data("pickmeup-options"), n = s.current; switch (s.mode) { case "multiple": t = n.setHours(0, 0, 0, 0).valueOf(), -1 !== e.inArray(t, s.date) ? e.each(s.date, function (e, a) { return a == t ? (s.date.splice(e, 1), !1) : !0 }) : s.date.push(t); break; case "range": s.lastSel || (s.date[0] = n.setHours(0, 0, 0, 0).valueOf()), t = n.setHours(0, 0, 0, 0).valueOf(), t <= s.date[0] ? (s.date[1] = s.date[0], s.date[0] = t) : s.date[1] = t, s.lastSel = !s.lastSel; break; default: s.date = n.valueOf() }var i = d(s); return a.is("input") && a.val("single" == s.mode ? i[0] : i[0].join(s.separator)), s.change.apply(this, i), s.flat || !s.hide_on_select || "range" == s.mode && s.lastSel ? void 0 : (s.binded.hide(), !1) } function r(t) { var a = e(t.target); if (a.hasClass("pmu-button") || (a = a.closest(".pmu-button")), a.length) { if (a.hasClass("pmu-disabled")) return !1; var s = e(this), n = s.data("pickmeup-options"), i = a.parents(".pmu-instance").eq(0), r = i.parent(), d = e(".pmu-instance", r).index(i); if (a.parent().is("nav")) a.hasClass("pmu-month") ? (n.current.addMonths(d - Math.floor(n.calendars / 2)), r.hasClass("pmu-view-years") ? ("single" != n.mode ? n.current = new Date(n.date[n.date.length - 1]) : n.current = new Date(n.date), n.select_day ? r.removeClass("pmu-view-years").addClass("pmu-view-days") : n.select_month && r.removeClass("pmu-view-years").addClass("pmu-view-months")) : r.hasClass("pmu-view-months") ? n.select_year ? r.removeClass("pmu-view-months").addClass("pmu-view-years") : n.select_day && r.removeClass("pmu-view-months").addClass("pmu-view-days") : r.hasClass("pmu-view-days") && (n.select_month ? r.removeClass("pmu-view-days").addClass("pmu-view-months") : n.select_year && r.removeClass("pmu-view-days").addClass("pmu-view-years"))) : a.hasClass("pmu-prev") ? n.binded.prev(!1) : n.binded.next(!1); else if (!a.hasClass("pmu-disabled")) if (r.hasClass("pmu-view-years")) n.current.setFullYear(parseInt(a.text(), 10)), n.select_month ? r.removeClass("pmu-view-years").addClass("pmu-view-months") : n.select_day ? r.removeClass("pmu-view-years").addClass("pmu-view-days") : n.binded.update_date(); else if (r.hasClass("pmu-view-months")) n.current.setMonth(i.find(".pmu-months .pmu-button").index(a)), n.current.setFullYear(parseInt(i.find(".pmu-month").text(), 10)), n.select_day ? r.removeClass("pmu-view-months").addClass("pmu-view-days") : n.binded.update_date(), n.current.addMonths(Math.floor(n.calendars / 2) - d); else { var o = parseInt(a.text(), 10); n.current.addMonths(d - Math.floor(n.calendars / 2)), a.hasClass("pmu-not-in-month") && n.current.addMonths(o > 15 ? -1 : 1), n.current.setDate(o), n.binded.update_date() } n.binded.fill() } return !1 } function d(t) { var a; return "single" == t.mode ? (a = new Date(t.date), [n(a, t.format, t.locale), a]) : (a = [[], []], e.each(t.date, function (e, s) { var i = new Date(s); a[0].push(n(i, t.format, t.locale)), a[1].push(i) }), a) } function o(a) { var n = this.pickmeup; if (a || !n.is(":visible")) { var i = e(this), r = i.data("pickmeup-options"), d = i.offset(), o = { l: document.documentElement.scrollLeft, t: document.documentElement.scrollTop, w: document.documentElement.clientWidth, h: document.documentElement.clientHeight }, l = d.top, u = d.left; if (r.binded.fill(), i.is("input") && (i.pickmeup("set_date", s(i.val() ? i.val() : r.default_date, r.format, r.separator, r.locale)).keydown(function (e) { 9 == e.which && i.pickmeup("hide") }), r.lastSel = !1), r.before_show(), 0 == r.show()) return; if (!r.flat) { switch (r.position) { case "top": l -= n.outerHeight(); break; case "left": u -= n.outerWidth(); break; case "right": u += this.offsetWidth; break; case "bottom": l += this.offsetHeight }l + n.offsetHeight > o.t + o.h && (l = d.top - n.offsetHeight), l < o.t && (l = d.top + this.offsetHeight + n.offsetHeight), u + n.offsetWidth > o.l + o.w && (u = d.left - n.offsetWidth), u < o.l && (u = d.left + this.offsetWidth), n.css({ display: "inline-block", top: l + "px", left: u + "px" }), e(document).on(t(r.trigger_event, r.events_namespace), r.binded.hide).on("resize" + r.events_namespace, [!0], r.binded.forced_show) } } } function l() { o.call(this, !0) } function u(a) { if (!a || !a.target || a.target != this && !(16 & this.pickmeup.get(0).compareDocumentPosition(a.target))) { var s = this.pickmeup, n = e(this).data("pickmeup-options"); 0 != n.hide() && (s.hide(), e(document).off(t(n.trigger_event, n.events_namespace), n.binded.hide).off("resize", n.binded.forced_show), n.lastSel = !1) } } function c() { var a = e(this).data("pickmeup-options"); e(document).off(t(a.trigger_event, a.events_namespace), a.binded.hide).off("resize", a.binded.forced_show), a.binded.forced_show() } function m() { var t = e(this).data("pickmeup-options"); "single" != t.mode && (t.date = [], t.lastSel = !1, t.binded.fill()) } function p(t) { "undefined" == typeof t && (t = !0); var a = this.pickmeup, s = e(this).data("pickmeup-options"); a.hasClass("pmu-view-years") ? s.current.addYears(-12) : a.hasClass("pmu-view-months") ? s.current.addYears(-1) : a.hasClass("pmu-view-days") && s.current.addMonths(-1), t && s.binded.fill() } function h(t) { "undefined" == typeof t && (t = !0); var a = this.pickmeup, s = e(this).data("pickmeup-options"); a.hasClass("pmu-view-years") ? s.current.addYears(12) : a.hasClass("pmu-view-months") ? s.current.addYears(1) : a.hasClass("pmu-view-days") && s.current.addMonths(1), t && s.binded.fill() } function f(t) { var a = e(this).data("pickmeup-options"), s = d(a); if ("string" == typeof t) { var i = s[1]; return i.constructor == Date ? n(i, t, a.locale) : i.map(function (e) { return n(e, t, a.locale) }) } return s[t ? 0 : 1] } function v(t) { var a = e(this), n = a.data("pickmeup-options"); if (n.date = t, "string" == typeof n.date ? n.date = s(n.date, n.format, n.separator, n.locale).setHours(0, 0, 0, 0) : n.date.constructor == Date && n.date.setHours(0, 0, 0, 0), n.date || (n.date = new Date, n.date.setHours(0, 0, 0, 0)), "single" != n.mode) if (n.date.constructor != Array) n.date = [n.date.valueOf()], "range" == n.mode && n.date.push(new Date(n.date[0]).setHours(0, 0, 0, 0).valueOf()); else { for (var i = 0; i < n.date.length; i++)n.date[i] = s(n.date[i], n.format, n.separator, n.locale).setHours(0, 0, 0, 0).valueOf(); "range" == n.mode && (n.date[1] = new Date(n.date[1]).setHours(0, 0, 0, 0).valueOf()) } else (a.val() || n.default_date !== !1) && (n.date = n.date.constructor == Array ? n.date[0].valueOf() : n.date.valueOf()); if (n.current = new Date("single" != n.mode ? n.date[0] : n.date), n.binded.fill(), a.is("input") && n.default_date !== !1) { var r = d(n); a.val() || n.change.apply(this, r), a.val("single" == n.mode ? r[0] : r[0].join(n.separator)) } } function y() { var t = e(this), a = t.data("pickmeup-options"); t.removeData("pickmeup-options"), t.off(a.events_namespace), e(document).off(a.events_namespace), e(this.pickmeup).remove() } var g = 0; e.pickmeup = e.extend(e.pickmeup || {}, { date: new Date, default_date: new Date, flat: !1, first_day: 1, prev: "&#9664;", next: "&#9654;", mode: "single", select_year: !0, select_month: !0, select_day: !0, view: "days", calendars: 1, format: "d-m-Y", title_format: "B, Y", position: "bottom", trigger_event: "click touchstart", class_name: "", separator: " - ", hide_on_select: !1, min: null, max: null, render: function () { }, change: function () { return !0 }, before_show: function () { return !0 }, show: function () { return !0 }, hide: function () { return !0 }, fill: function () { return !0 }, locale: { days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] } }); var w = { years: "pmu-view-years", months: "pmu-view-months", days: "pmu-view-days" }, b = { wrapper: '<div class="pickmeup" />', head: function (e) { for (var t = "", a = 0; 7 > a; ++a)t += "<div>" + e.day[a] + "</div>"; return '<div class="pmu-instance"><nav><div class="pmu-prev pmu-button">' + e.prev + '</div><div class="pmu-month pmu-button" /><div class="pmu-next pmu-button">' + e.next + '</div></nav><nav class="pmu-day-of-week">' + t + "</nav></div>" }, body: function (e, t) { for (var a = "", s = 0; s < e.length; ++s)a += '<div class="' + e[s].class_name + ' pmu-button">' + e[s].text + "</div>"; return '<div class="' + t + '">' + a + "</div>" } }; e.fn.pickmeup = function (n) { if ("string" == typeof n) { var d, D = Array.prototype.slice.call(arguments, 1); switch (n) { case "hide": case "show": case "clear": case "update": case "prev": case "next": case "destroy": this.each(function () { d = e(this).data("pickmeup-options"), d && d.binded[n]() }); break; case "get_date": return d = this.data("pickmeup-options"), d ? d.binded.get_date(D[0]) : null; case "set_date": this.each(function () { d = e(this).data("pickmeup-options"), d && d.binded[n].apply(this, D) }) }return this } return this.each(function () { var d = e(this); if (!d.data("pickmeup-options")) { var D, _, k = e.extend({}, e.pickmeup, n || {}); for (D in k) _ = d.data("pmu-" + D), "undefined" != typeof _ && (k[D] = _); if ("days" != k.view || k.select_day || (k.view = "months"), "months" != k.view || k.select_month || (k.view = "years"), "years" != k.view || k.select_year || (k.view = "days"), "days" != k.view || k.select_day || (k.view = "months"), k.calendars = Math.max(1, parseInt(k.calendars, 10) || 1), k.mode = /single|multiple|range/.test(k.mode) ? k.mode : "single", "string" == typeof k.min ? k.min = s(k.min, k.format, k.separator, k.locale).setHours(0, 0, 0, 0) : k.min && k.min.constructor == Date && k.min.setHours(0, 0, 0, 0), "string" == typeof k.max ? k.max = s(k.max, k.format, k.separator, k.locale).setHours(0, 0, 0, 0) : k.max && k.max.constructor == Date && k.max.setHours(0, 0, 0, 0), k.select_day || (k.min && (k.min = new Date(k.min), k.min.setDate(1), k.min = k.min.valueOf()), k.max && (k.max = new Date(k.max), k.max.setDate(1), k.max = k.max.valueOf())), "string" == typeof k.date ? k.date = s(k.date, k.format, k.separator, k.locale).setHours(0, 0, 0, 0) : k.date.constructor == Date && k.date.setHours(0, 0, 0, 0), k.date || (k.date = new Date, k.date.setHours(0, 0, 0, 0)), "single" != k.mode) { if (k.date.constructor != Array) k.date = [k.date.valueOf()], "range" == k.mode && k.date.push(new Date(k.date[0]).setHours(0, 0, 0, 0).valueOf()); else { for (D = 0; D < k.date.length; D++)k.date[D] = s(k.date[D], k.format, k.separator, k.locale).setHours(0, 0, 0, 0).valueOf(); "range" == k.mode && (k.date[1] = new Date(k.date[1]).setHours(0, 0, 0, 0).valueOf()) } if (k.current = new Date(k.date[k.date.length - 1]), !k.select_day) for (D = 0; D < k.date.length; ++D)k.date[D] = new Date(k.date[D]), k.date[D].setDate(1), k.date[D] = k.date[D].valueOf(), "range" != k.mode && k.date.indexOf(k.date[D]) !== D && (delete k.date.splice(D, 1), --D) } else k.date = k.date.valueOf(), k.current = new Date(k.date), k.select_day || (k.date = new Date(k.date), k.date.setDate(1), k.date = k.date.valueOf()); k.current.setDate(1), k.current.setHours(0, 0, 0, 0); var M, x = e(b.wrapper); this.pickmeup = x, k.class_name && x.addClass(k.class_name); var C = ""; for (D = 0; D < k.calendars; D++)M = k.first_day, C += b.head({ prev: k.prev, next: k.next, day: [k.locale.daysMin[M++ % 7], k.locale.daysMin[M++ % 7], k.locale.daysMin[M++ % 7], k.locale.daysMin[M++ % 7], k.locale.daysMin[M++ % 7], k.locale.daysMin[M++ % 7], k.locale.daysMin[M++ % 7]] }); d.data("pickmeup-options", k); for (D in k) -1 != ["render", "change", "before_show", "show", "hide"].indexOf(D) && (k[D] = k[D].bind(this)); k.binded = { fill: a.bind(this), update_date: i.bind(this), click: r.bind(this), show: o.bind(this), forced_show: l.bind(this), hide: u.bind(this), update: c.bind(this), clear: m.bind(this), prev: p.bind(this), next: h.bind(this), get_date: f.bind(this), set_date: v.bind(this), destroy: y.bind(this) }, k.events_namespace = ".pickmeup-" + ++g, x.on(t(k.trigger_event, k.events_namespace), k.binded.click).addClass(w[k.view]).append(C).on(e.support.selectstart ? "selectstart" : "mousedown", function (e) { e.preventDefault() }), k.binded.fill(), k.flat ? x.appendTo(this).css({ position: "relative", display: "inline-block" }) : (x.appendTo(document.body), d.on(t(k.trigger_event, k.events_namespace), k.binded.show)) } }) } });